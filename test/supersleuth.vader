Before:
  " random values to see if they change
  setlocal tabstop=3 noexpandtab shiftwidth=7

Given (tabs only):
  void f() {
  	hi
  }
Execute:
  SuperSleuth
Then:
  Assert &tabstop == 2
  Assert &expandtab == 0
  Assert &shiftwidth == 0

Given (consistent 1-space indent):
  void f() {
   hi
   hi
  }
Execute:
  SuperSleuth
Then:
  Assert &tabstop == 1
  Assert &expandtab == 1
  Assert &shiftwidth == 0

Given (consistent 4-space indent):
  void f() {
      hi
      if()
  }
Execute:
  SuperSleuth
Then:
  Assert &tabstop == 4
  Assert &expandtab == 1
  Assert &shiftwidth == 0

Given (consistent spaces then tabs):
  void f() {
    yo
    yo
  	hi
  }
Execute:
  SuperSleuth
Then:
  Assert &tabstop == 8
  Assert &expandtab == 0
  Assert &shiftwidth == 2

Given (tabs then consistent spaces):
  void f() {
  	hi
    yo
    yo
  }
Execute:
  SuperSleuth
Then:
  Assert &tabstop == 8
  Assert &expandtab == 0
  Assert &shiftwidth == 2

Given (consistent spaces mixed with tabs):
  void f() {
    yo
  	hi
    yo
  }
Execute:
  SuperSleuth
Then:
  Assert &tabstop == 8
  Assert &expandtab == 0
  Assert &shiftwidth == 2

Given (inconsistent spaces only):
  void f() {
    yo
       hi
  }
Execute:
  SuperSleuth
Then:
  Assert &tabstop == 3
  Assert &expandtab == 0
  Assert &shiftwidth == 7

Given (small indent then consistent large indents, no consistent small indent):
  void f() {
    2 space indent
      4 space indent
      4 space indent 2
  }
Execute:
  SuperSleuth
Then:
  " smallest indent is picked
  Assert &tabstop == 2
  Assert &expandtab == 1
  Assert &shiftwidth == 0

Given (small indent then consistent large indents, then consistent small indent):
  void f() {
    2 space indent
      4 space indent
      4 space indent 2
    2 space indent 2
  }
Execute:
  SuperSleuth
Then:
  " smallest indent is picked
  Assert &tabstop == 2
  Assert &expandtab == 1
  Assert &shiftwidth == 0

Given (indented text, but with consistent steps between indent levels, two spaces):
    hi
      there
      there2
Execute:
  SuperSleuth
Then:
  " inconsistent spacing, but we guess at the gap between the first and second depths
  Assert &expandtab == 1
  Assert &tabstop == 2
  Assert &shiftwidth == 0

Given (indented text, but with consistent steps between indent levels, two spaces, four space initial):
      hi
        there
        there2
Execute:
  SuperSleuth
Then:
  Assert &expandtab == 1
  Assert &tabstop == 2
  Assert &shiftwidth == 0

Given (indented text, but with consistent steps between indent levels, four spaces, multiple levels):
    hi
        there
        there2
            there3
Execute:
  SuperSleuth
Then:
  Assert &expandtab == 1
  Assert &tabstop == 2
  Assert &shiftwidth == 0

Given (indented text, but with inconsistent steps between indent levels):
    hi
        there
        there2
           there3
Execute:
  SuperSleuth
Then:
  Assert &expandtab == 1
  Assert &tabstop == 2
  Assert &shiftwidth == 0
